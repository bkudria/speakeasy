#+TITLE: Speakeasy Tasks
#+STARTUP: overview
#+TODO: TODO DOING(d) | DONE

* Claude Task Processing [8/8]
** DONE Ensure Claude reads all instructions at session start
:PROPERTIES:
:FILES: CLAUDE.md, docs/instructions/*.md
:POINTS: 1
:END:
*** DONE Update instructions to require reading docs before starting tasks or task refinement
:PROPERTIES:
:POINTS: 1
:END:
** DONE Update instructions to clarify task ordering for Claude
:PROPERTIES:
:FILES: CLAUDE.md, docs/instructions/*.md
:POINTS: 3
:END:
*** DONE Specify that next task is always the first incomplete task in the list
:PROPERTIES:
:POINTS: 1
:END:
*** DONE Specify that Claude should proactively report the next task after completing one
:PROPERTIES:
:POINTS: 1
:END:
*** DONE Specify that Claude should ask questions about a task when it becomes active
:PROPERTIES:
:POINTS: 1
:END:

* Process Improvements [2/2]
** DONE Update Claude's instructions about task order and completion
:PROPERTIES:
:FILES: CLAUDE.md, docs/instructions/*.md
:POINTS: 2
:END:
*** DONE Specify tasks must be completed in sequential order
:PROPERTIES:
:POINTS: 1
:END:
*** DONE Clarify that all tasks in a section must be completed before starting new sections
:PROPERTIES:
:POINTS: 1
:END:

* Instruction Improvements for Ruby TDD Projects [1/6]
** DONE Update instructions for information gathering
:PROPERTIES:
:FILES: docs/instructions/*.md
:POINTS: 2
:END:
*** DONE Add clarification about obtaining complete information
:PROPERTIES:
:POINTS: 1
:END:
**** DONE Instruct Claude to ask questions before starting tasks
:PROPERTIES:
:POINTS: 1
:END:
**** DONE Ensure all required information is gathered up front
:PROPERTIES:
:POINTS: 1
:END:

** DOING Fix document redundancy and inconsistency issues [2/3]
:PROPERTIES:
:FILES: docs/instructions/*.md
:END:
*** DONE Consolidate duplicated content across instruction documents
:PROPERTIES:
:POINTS: 3
:END:
**** DONE Create centralized TDD workflow in single reference document
:PROPERTIES:
:POINTS: 2
:END:
**** DONE Extract task status management to dedicated section
:PROPERTIES:
:POINTS: 2
:END:
**** DONE Remove repeated explanations of the same concepts
:PROPERTIES:
:POINTS: 1
:END:
*** DONE Standardize formatting across all instruction documents
:PROPERTIES:
:POINTS: 3
:END:
**** DONE Implement consistent heading structure and levels
:PROPERTIES:
:POINTS: 1
:END:
**** DONE Normalize use of bullet points vs. numbered lists
:PROPERTIES:
:POINTS: 1
:END:
**** DONE Create style guide for instruction document formatting
:PROPERTIES:
:POINTS: 1
:END:

** TODO Clarify ambiguous instructions and guidelines
:PROPERTIES:
:FILES: docs/instructions/*.md
:END:
*** TODO Define explicit criteria for TDD application scope
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Create decision tree for determining TDD necessity
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Document examples of code changes requiring strict TDD vs. exceptions
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Clarify task status transition points
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Define precise triggers for task status changes
:PROPERTIES:
:POINTS: 1
:END:
**** TODO Create flowchart for task status management lifecycle
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Establish clear criteria for task breakdown
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Document process for evaluating task complexity
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Provide examples of appropriate vs. excessive task granularity
:PROPERTIES:
:POINTS: 2
:END:

** TODO Simplify document structure and navigation
:PROPERTIES:
:FILES: docs/instructions/*.md
:END:
*** TODO Reorganize instructions by workflow stages rather than document types
:PROPERTIES:
:POINTS: 5
:END:
**** TODO Create workflow-aligned document structure
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Implement progressive disclosure of information
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Create unified index and navigation system
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Develop hyperlinked document map
:PROPERTIES:
:POINTS: 1
:END:
**** TODO Add contextual navigation between related sections
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Reduce cross-references between documents
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Consolidate related information in single locations
:PROPERTIES:
:POINTS: 1
:END:
**** TODO Replace cross-references with direct content inclusion
:PROPERTIES:
:POINTS: 1
:END:

** TODO Enhance procedural format for AI consumption
:PROPERTIES:
:FILES: docs/instructions/*.md
:END:
*** TODO Convert narrative instructions to algorithm-style procedures
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Develop decision trees for file handling and task refinement
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Create standardized input/output templates for consistent formatting
:PROPERTIES:
:POINTS: 1
:END:
*** TODO Add structured formats for AI processing
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Use more tables and structured formats instead of prose
:PROPERTIES:
:POINTS: 1
:END:
**** TODO Include clearer heuristics for decision-making points
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Standardize heading levels and hierarchies
:PROPERTIES:
:POINTS: 1
:END:

** TODO Generalize technical guidance for Ruby projects
:PROPERTIES:
:FILES: docs/instructions/*.md, docs/conventions.md
:END:
*** TODO Create language-agnostic but Ruby-friendly sections
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Add guidance on composition patterns
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Include Ruby idioms and conventions applicable across projects
:PROPERTIES:
:POINTS: 1
:END:
*** TODO Structure file/class organization principles for Ruby projects
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Document typical RSpec project organization patterns
:PROPERTIES:
:POINTS: 1
:END:
**** TODO Include examples of test-to-implementation mappings
:PROPERTIES:
:POINTS: 1
:END:

* Refactoring [3/5]
** TODO Refactor duplicate code identified by flay [3/5]
:PROPERTIES:
:FILES: lib/misalignment_detector.rb, lib/transcript_processor.rb, lib/csv_generator.rb
:END:
*** DONE Refactor similar code in :call blocks in MisalignmentDetector
:PROPERTIES:
:FILES: lib/misalignment_detector.rb
:POINTS: 8
:END:
**** DONE Extract duplicated check and issue creation pattern from lines 170, 181, 217, and 299
:PROPERTIES:
:POINTS: 5
:END:
**** DONE Create helper method for issue creation with common parameters
:PROPERTIES:
:POINTS: 3
:END:

*** DONE Refactor error handling code in TranscriptProcessor
:PROPERTIES:
:FILES: lib/transcript_processor.rb
:POINTS: 8
:END:
**** DONE Extract common error handling pattern from :resbody blocks at lines 137, 169, 201, and 210
:PROPERTIES:
:POINTS: 5
:END:
**** DONE Create reusable error handling method with appropriate parameters
:PROPERTIES:
:POINTS: 3
:END:

*** TODO Refactor similar code blocks in TranscriptProcessor [1/1]
:PROPERTIES:
:FILES: lib/transcript_processor.rb
:POINTS: 5
:END:
**** DONE Extract duplicate speaker file handling logic from blocks at lines 46 and 70
:PROPERTIES:
:POINTS: 5
:END:

*** TODO Refactor confidence check code in MisalignmentDetector [2/2]
:PROPERTIES:
:FILES: lib/misalignment_detector.rb
:POINTS: 5
:END:
**** DONE Extract duplicated confidence threshold checking logic from lines 136 and 147
:PROPERTIES:
:POINTS: 3
:END:
**** DONE Create helper method for confidence-related issue detection
:PROPERTIES:
:POINTS: 2
:END:

*** DONE Refactor duplicate conditional logic in CsvGenerator
:PROPERTIES:
:FILES: lib/csv_generator.rb
:POINTS: 3
:END:
**** DONE Extract common condition checking from consecutive error handling at lines 152-158 and 175-177
:PROPERTIES:
:POINTS: 3
:END:

* Code Quality Improvements [0/2]
** TODO Refactor TranscriptProcessor class [5/7]
:PROPERTIES:
:FILES: lib/transcript_processor.rb, spec/transcript_processor_spec.rb
:END:
*** TODO Extract responsibilities into smaller focused classes [3/3]
:PROPERTIES:
:POINTS: 5
:END:
**** DONE Create FileValidator class for input validation
:PROPERTIES:
:FILES: lib/file_validator.rb, spec/file_validator_spec.rb
:POINTS: 3
:END:
**** DONE Extract SpeakerFileManager for speaker file handling
:PROPERTIES:
:FILES: lib/speaker_file_manager.rb, spec/speaker_file_manager_spec.rb
:POINTS: 3
:END:
**** DONE Create ProcessingCoordinator to manage workflow
:PROPERTIES:
:FILES: lib/processing_coordinator.rb, spec/processing_coordinator_spec.rb
:POINTS: 5
:END:
*** TODO Improve error handling [2/2]
:PROPERTIES:
:POINTS: 3
:END:
**** DONE Create TranscriptProcessorError and subclasses
:PROPERTIES:
:FILES: lib/errors/transcript_processor_error.rb
:POINTS: 2
:END:
**** DONE Enhance handle_error method with recovery strategies
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Add comprehensive tests [0/3]
:PROPERTIES:
:POINTS: 5
:END:
**** TODO Test named and unnamed speaker file scenarios
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Test malformed input handling paths
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Test partial processing recovery
:PROPERTIES:
:POINTS: 3
:END:

** TODO Refactor CsvGenerator class [0/4]
:PROPERTIES:
:FILES: lib/csv_generator.rb, spec/csv_generator_spec.rb
:END:
*** TODO Break down process_parsed_items method [0/3]
:PROPERTIES:
:POINTS: 5
:END:
**** TODO Extract group splitting logic to separate method
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Create methods for transcript building
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Separate row creation from processing logic
:PROPERTIES:
:POINTS: 3
:END:
*** TODO Extract natural pause detection [0/2]
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Create PauseDetector class for pause identification
:PROPERTIES:
:FILES: lib/pause_detector.rb, spec/pause_detector_spec.rb
:POINTS: 3
:END:
**** TODO Support configurable pause thresholds
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Improve error handling [0/2]
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Replace abort calls with proper exception handling
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Create progressive error recovery mechanism
:PROPERTIES:
:POINTS: 3
:END:
*** TODO Add boundary condition tests [0/3]
:PROPERTIES:
:POINTS: 5
:END:
**** TODO Test with empty/sparse input data
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Test with malformed segment data
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Test with confidence calculation edge cases
:PROPERTIES:
:POINTS: 2
:END:

* Documentation Improvements for AI Agents [0/3]
** TODO Enhance instruction clarity for AI processing
:PROPERTIES:
:FILES: docs/instructions/*.md
:END:
*** TODO Add consistent format patterns for machine parsing
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Create standardized section tags with clear start/end boundaries
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Implement uniform formatting for code/data distinctions
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Incorporate explicit reasoning process guides
:PROPERTIES:
:POINTS: 5
:END:
**** TODO Create step-by-step reasoning templates for code analysis
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Add decision tree examples for common scenarios
:PROPERTIES:
:POINTS: 3
:END:

** TODO Improve examples for AI comprehension
:PROPERTIES:
:FILES: docs/instructions/*.md
:END:
*** TODO Add input/output examples with exact formatting
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Create examples for task refinement process
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Add examples for code analysis workflows
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Develop error recovery procedures
:PROPERTIES:
:POINTS: 5
:END:
**** TODO Document specific recovery steps for misunderstood instructions
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Add examples of error recognition and self-correction
:PROPERTIES:
:POINTS: 3
:END:

** TODO Create AI-specific reference documentation
:PROPERTIES:
:FILES: docs/instructions/*.md, docs/ai_agent_guide.md
:END:
*** TODO Develop specialized glossary of terms
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Define technical terms with AI-relevant context
:PROPERTIES:
:POINTS: 2
:END:
**** TODO Add examples of correct term application
:PROPERTIES:
:POINTS: 2
:END:
*** TODO Create pattern library for code structures
:PROPERTIES:
:POINTS: 5
:END:
**** TODO Document Ruby idioms commonly used in the codebase
:PROPERTIES:
:POINTS: 3
:END:
**** TODO Add recognition patterns for test/implementation pairs
:PROPERTIES:
:POINTS: 3
:END:
